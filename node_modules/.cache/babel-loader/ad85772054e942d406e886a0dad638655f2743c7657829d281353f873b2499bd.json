{"ast":null,"code":"var _jsxFileName = \"/home/inigoalda/prototype-ping/src/components/WorkArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WorkArea.css';\nimport TabBar from './TabBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkArea() {\n  _s();\n  // series of tabs with different editors monaco representing different file types\n  // each tab has a close button\n  // each tab has a title\n\n  const [tabs, setTabs] = useState([{\n    title: 'Tab 1',\n    content: 'This is tab 1',\n    type: 'text'\n  }]);\n  const [activeTab, setActiveTab] = useState(null);\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleCloseTab = tab => {\n    setTabs(tabs.filter(t => t !== tab));\n    if (activeTab === tab) {\n      setActiveTab(null);\n    }\n  };\n  const handleNewTab = () => {\n    const newTab = {\n      title: 'New Tab',\n      content: '',\n      type: 'text'\n    };\n    setTabs([...tabs, newTab]);\n    setActiveTab(newTab);\n  };\n  const handleTabChange = content => {\n    const updatedTabs = tabs.map(t => t === activeTab ? {\n      ...t,\n      content\n    } : t);\n    setTabs(updatedTabs);\n  };\n  return /*#__PURE__*/_jsxDEV(TabBar, {\n    tabs: tabs,\n    activeTab: activeTab,\n    onTabClick: handleTabClick,\n    onCloseTab: handleCloseTab,\n    onNewTab: handleNewTab,\n    onTabChange: handleTabChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(WorkArea, \"12K4E9h7bwJvpa0Y+CiRbZjvFeM=\");\n_c = WorkArea;\nexport default WorkArea;\nvar _c;\n$RefreshReg$(_c, \"WorkArea\");","map":{"version":3,"names":["React","useState","TabBar","jsxDEV","_jsxDEV","WorkArea","_s","tabs","setTabs","title","content","type","activeTab","setActiveTab","handleTabClick","tab","handleCloseTab","filter","t","handleNewTab","newTab","handleTabChange","updatedTabs","map","onTabClick","onCloseTab","onNewTab","onTabChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/inigoalda/prototype-ping/src/components/WorkArea.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './WorkArea.css';\r\n\r\nimport TabBar from './TabBar';\r\n\r\nfunction WorkArea() {\r\n    // series of tabs with different editors monaco representing different file types\r\n    // each tab has a close button\r\n    // each tab has a title\r\n\r\n    const [tabs, setTabs] = useState([{\r\n        title: 'Tab 1', content: 'This is tab 1', type: 'text',\r\n    }]);\r\n    const [activeTab, setActiveTab] = useState(null);\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    }\r\n\r\n    const handleCloseTab = (tab) => {\r\n        setTabs(tabs.filter(t => t !== tab));\r\n        if (activeTab === tab) {\r\n            setActiveTab(null);\r\n        }\r\n    }\r\n\r\n    const handleNewTab = () => {\r\n        const newTab = {\r\n            title: 'New Tab', content: '', type: 'text',\r\n        };\r\n        setTabs([...tabs, newTab]);\r\n        setActiveTab(newTab);\r\n    }\r\n\r\n    const handleTabChange = (content) => {\r\n        const updatedTabs = tabs.map(t => t === activeTab ? {...t, content} : t);\r\n        setTabs(updatedTabs);\r\n    }\r\n\r\n    return (\r\n        <TabBar tabs={tabs} activeTab={activeTab} onTabClick={handleTabClick} onCloseTab={handleCloseTab}\r\n                onNewTab={handleNewTab} onTabChange={handleTabChange}/>\r\n    );\r\n\r\n}\r\n\r\nexport default WorkArea;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,gBAAgB;AAEvB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA;EACA;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC;IAC9BQ,KAAK,EAAE,OAAO;IAAEC,OAAO,EAAE,eAAe;IAAEC,IAAI,EAAE;EACpD,CAAC,CAAC,CAAC;EACH,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMa,cAAc,GAAIC,GAAG,IAAK;IAC5BF,YAAY,CAACE,GAAG,CAAC;EACrB,CAAC;EAED,MAAMC,cAAc,GAAID,GAAG,IAAK;IAC5BP,OAAO,CAACD,IAAI,CAACU,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKH,GAAG,CAAC,CAAC;IACpC,IAAIH,SAAS,KAAKG,GAAG,EAAE;MACnBF,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAG;MACXX,KAAK,EAAE,SAAS;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IACzC,CAAC;IACDH,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEa,MAAM,CAAC,CAAC;IAC1BP,YAAY,CAACO,MAAM,CAAC;EACxB,CAAC;EAED,MAAMC,eAAe,GAAIX,OAAO,IAAK;IACjC,MAAMY,WAAW,GAAGf,IAAI,CAACgB,GAAG,CAACL,CAAC,IAAIA,CAAC,KAAKN,SAAS,GAAG;MAAC,GAAGM,CAAC;MAAER;IAAO,CAAC,GAAGQ,CAAC,CAAC;IACxEV,OAAO,CAACc,WAAW,CAAC;EACxB,CAAC;EAED,oBACIlB,OAAA,CAACF,MAAM;IAACK,IAAI,EAAEA,IAAK;IAACK,SAAS,EAAEA,SAAU;IAACY,UAAU,EAAEV,cAAe;IAACW,UAAU,EAAET,cAAe;IACzFU,QAAQ,EAAEP,YAAa;IAACQ,WAAW,EAAEN;EAAgB;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAGvE;AAACzB,EAAA,CAvCQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}